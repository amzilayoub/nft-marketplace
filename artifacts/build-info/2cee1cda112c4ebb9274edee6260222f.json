{"id":"2cee1cda112c4ebb9274edee6260222f","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/NftMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ncontract NftMarketplace {\n\t/***********************\n\t * Errors\n\t **********************/\n\terror NftMarketplace__NotValidPrice();\n\terror NftMarketplace__NotApproved();\n\terror NftMarketplace__();\n\n\t/************************\n\t * Modifiers\n\t ***********************/\n\t/**\n\t *  check if price if valid\n\t * @param price nft price\n\t */\n\tmodifier validPrice(uint256 price) {\n\t\tif (price <= 0) {\n\t\t\trevert NftMarketplace__NotValidPrice();\n\t\t}\n\t\t_;\n\t}\n\n\t/**\n\t * check if the marketplace (this contract) is allowed to list the nft\n\t * @param nftAddress nft address\n\t * @param tokenId token id of the specific nft\n\t */\n\tmodifier getApproval(address nftAddress, uint256 tokenId) {\n\t\tIERC721 nft = IERC721(nftAddress);\n\t\tif (nft.getApproved(tokenId) != address(this)) {\n\t\t\trevert NftMarketplace__NotApproved();\n\t\t}\n\t\t_;\n\t}\n\n\t/**\n\t * check if the sender has the ownership to list the nft\n\t * @param nftAddress nft address\n\t * @param tokenId token id of the specific nft\n\t */\n\tmodifier hasOwnership(address nftAddress, uint256 tokenId) {\n\t\tIERC721 nft = IERC721(nftAddress);\n\t\tif (nft.ownerOf(tokenId) != msg.sender) {\n\t\t\trevert NftMarketplace__();\n\t\t}\n\t\t_;\n\t}\n\n\t/***********************\n\t ** Functions\n\t **********************/\n\tfunction listItem(\n\t\taddress nftAddress,\n\t\tuint256 tokenId,\n\t\tuint256 price\n\t)\n\t\texternal\n\t\tvalidPrice(price)\n\t\thasOwnership(nftAddress, tokenId)\n\t\tgetApproval(nftAddress, tokenId)\n\t{\n\t\t/* First check for the price if greater than 0 */\n\t\t/* then check if this contract is eligible to list the nft */\n\t\t/* check if the sender is the owner */\n\t}\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[127],"IERC721":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":128,"src":"133:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":127,"src":"271:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"271:7:0"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"182:67:0","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":115,"linearizedBaseContracts":[115,127],"name":"IERC721","nameLocation":"260:7:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"285:88:0","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":14,"name":"Transfer","nameLocation":"384:8:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:0","nodeType":"VariableDeclaration","scope":14,"src":"393:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:0","nodeType":"VariableDeclaration","scope":14,"src":"415:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:0","nodeType":"VariableDeclaration","scope":14,"src":"435:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:0"},"src":"378:82:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:94:0","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":23,"name":"Approval","nameLocation":"571:8:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:0","nodeType":"VariableDeclaration","scope":23,"src":"580:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:0","nodeType":"VariableDeclaration","scope":23,"src":"603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:0","nodeType":"VariableDeclaration","scope":23,"src":"629:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:0"},"src":"565:89:0"},{"anonymous":false,"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"660:117:0","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":32,"name":"ApprovalForAll","nameLocation":"788:14:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:0","nodeType":"VariableDeclaration","scope":32,"src":"803:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:0","nodeType":"VariableDeclaration","scope":32,"src":"826:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":32,"src":"852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:0"},"src":"782:85:0"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"873:76:0","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"owner","nameLocation":"981:5:0","nodeType":"VariableDeclaration","scope":40,"src":"973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"balance","nameLocation":"1019:7:0","nodeType":"VariableDeclaration","scope":40,"src":"1011:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:0"},"scope":115,"src":"954:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1034:131:0","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:0","nodeType":"VariableDeclaration","scope":48,"src":"1187:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"owner","nameLocation":"1235:5:0","nodeType":"VariableDeclaration","scope":48,"src":"1227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:0"},"scope":115,"src":"1170:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1248:556:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"from","nameLocation":"1843:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1835:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"to","nameLocation":"1857:2:0","nodeType":"VariableDeclaration","scope":60,"src":"1849:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:0","nodeType":"VariableDeclaration","scope":60,"src":"1861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"data","nameLocation":"1893:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1878:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1907:0:0"},"scope":115,"src":"1809:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1914:687:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"from","nameLocation":"2640:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2632:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"2654:2:0","nodeType":"VariableDeclaration","scope":70,"src":"2646:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2658:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2683:0:0"},"scope":115,"src":"2606:78:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2690:732:0","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"from","nameLocation":"3457:4:0","nodeType":"VariableDeclaration","scope":80,"src":"3449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"to","nameLocation":"3471:2:0","nodeType":"VariableDeclaration","scope":80,"src":"3463:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:0","nodeType":"VariableDeclaration","scope":80,"src":"3475:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"3500:0:0"},"scope":115,"src":"3427:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3507:452:0","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"to","nameLocation":"3989:2:0","nodeType":"VariableDeclaration","scope":88,"src":"3981:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:0","nodeType":"VariableDeclaration","scope":88,"src":"3993:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"4018:0:0"},"scope":115,"src":"3964:55:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"4025:309:0","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"operator","nameLocation":"4374:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4366:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"approved","nameLocation":"4389:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4384:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4407:0:0"},"scope":115,"src":"4339:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"4414:139:0","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4579:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"operator","nameLocation":"4627:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4619:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:0"},"scope":115,"src":"4558:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4643:138:0","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"4820:5:0","nodeType":"VariableDeclaration","scope":114,"src":"4812:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"operator","nameLocation":"4835:8:0","nodeType":"VariableDeclaration","scope":114,"src":"4827:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"4868:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:0"},"scope":115,"src":"4786:88:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":116,"src":"250:4626:0","usedErrors":[]}],"src":"108:4769:0"},"id":0},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[127]},"id":128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"125:279:1","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":127,"linearizedBaseContracts":[127],"name":"IERC165","nameLocation":"415:7:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"429:340:1","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":126,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:1","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:1","nodeType":"VariableDeclaration","scope":126,"src":"801:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":120,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":126,"src":"844:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":123,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:1"},"scope":127,"src":"774:76:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":128,"src":"405:447:1","usedErrors":[]}],"src":"100:753:1"},"id":1},"contracts/NftMarketplace.sol":{"ast":{"absolutePath":"contracts/NftMarketplace.sol","exportedSymbols":{"IERC165":[127],"IERC721":[115],"NftMarketplace":[231]},"id":232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":129,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":232,"sourceUnit":116,"src":"58:58:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":231,"linearizedBaseContracts":[231],"name":"NftMarketplace","nameLocation":"127:14:2","nodeType":"ContractDefinition","nodes":[{"id":132,"name":"NftMarketplace__NotValidPrice","nameLocation":"214:29:2","nodeType":"ErrorDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"243:2:2"},"src":"208:38:2"},{"id":134,"name":"NftMarketplace__NotApproved","nameLocation":"254:27:2","nodeType":"ErrorDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"281:2:2"},"src":"248:36:2"},{"id":136,"name":"NftMarketplace__","nameLocation":"292:16:2","nodeType":"ErrorDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"308:2:2"},"src":"286:25:2"},{"body":{"id":150,"nodeType":"Block","src":"483:76:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":141,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"491:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"500:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"491:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"487:64:2","trueBody":{"id":147,"nodeType":"Block","src":"503:48:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":144,"name":"NftMarketplace__NotValidPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"515:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"515:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"508:38:2"}]}},{"id":149,"nodeType":"PlaceholderStatement","src":"554:1:2"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"382:64:2","text":"  check if price if valid\n @param price nft price"},"id":151,"name":"validPrice","nameLocation":"457:10:2","nodeType":"ModifierDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"price","nameLocation":"476:5:2","nodeType":"VariableDeclaration","scope":151,"src":"468:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"467:15:2"},"src":"448:111:2","virtual":false,"visibility":"internal"},{"body":{"id":180,"nodeType":"Block","src":"784:142:2","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"nft","nameLocation":"796:3:2","nodeType":"VariableDeclaration","scope":180,"src":"788:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"788:7:2"},"referencedDeclaration":115,"src":"788:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"visibility":"internal"}],"id":164,"initialValue":{"arguments":[{"id":162,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"810:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"802:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"788:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":167,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"845:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":165,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"829:3:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":104,"src":"829:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"829:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":171,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"865:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_NftMarketplace_$231","typeString":"contract NftMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftMarketplace_$231","typeString":"contract NftMarketplace"}],"id":170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"857:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:2","typeDescriptions":{}}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"857:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"829:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":178,"nodeType":"IfStatement","src":"825:93:2","trueBody":{"id":177,"nodeType":"Block","src":"872:46:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":174,"name":"NftMarketplace__NotApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"884:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"884:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"RevertStatement","src":"877:36:2"}]}},{"id":179,"nodeType":"PlaceholderStatement","src":"921:1:2"}]},"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"562:162:2","text":" check if the marketplace (this contract) is allowed to list the nft\n @param nftAddress nft address\n @param tokenId token id of the specific nft"},"id":181,"name":"getApproval","nameLocation":"735:11:2","nodeType":"ModifierDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"nftAddress","nameLocation":"755:10:2","nodeType":"VariableDeclaration","scope":181,"src":"747:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"tokenId","nameLocation":"775:7:2","nodeType":"VariableDeclaration","scope":181,"src":"767:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"746:37:2"},"src":"726:200:2","virtual":false,"visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"1138:124:2","statements":[{"assignments":[190],"declarations":[{"constant":false,"id":190,"mutability":"mutable","name":"nft","nameLocation":"1150:3:2","nodeType":"VariableDeclaration","scope":208,"src":"1142:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"},"typeName":{"id":189,"nodeType":"UserDefinedTypeName","pathNode":{"id":188,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"1142:7:2"},"referencedDeclaration":115,"src":"1142:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"visibility":"internal"}],"id":194,"initialValue":{"arguments":[{"id":192,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1164:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":191,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1156:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1156:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1142:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":197,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1195:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":195,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1183:3:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":48,"src":"1183:11:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1183:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1207:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1207:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1183:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":206,"nodeType":"IfStatement","src":"1179:75:2","trueBody":{"id":205,"nodeType":"Block","src":"1219:35:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"NftMarketplace__","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"1231:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1231:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"RevertStatement","src":"1224:25:2"}]}},{"id":207,"nodeType":"PlaceholderStatement","src":"1257:1:2"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"929:148:2","text":" check if the sender has the ownership to list the nft\n @param nftAddress nft address\n @param tokenId token id of the specific nft"},"id":209,"name":"hasOwnership","nameLocation":"1088:12:2","nodeType":"ModifierDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"nftAddress","nameLocation":"1109:10:2","nodeType":"VariableDeclaration","scope":209,"src":"1101:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"tokenId","nameLocation":"1129:7:2","nodeType":"VariableDeclaration","scope":209,"src":"1121:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1100:37:2"},"src":"1079:183:2","virtual":false,"visibility":"internal"},{"body":{"id":229,"nodeType":"Block","src":"1514:161:2","statements":[]},"functionSelector":"89bfd38f","id":230,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":218,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1435:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":219,"kind":"modifierInvocation","modifierName":{"id":217,"name":"validPrice","nodeType":"IdentifierPath","referencedDeclaration":151,"src":"1424:10:2"},"nodeType":"ModifierInvocation","src":"1424:17:2"},{"arguments":[{"id":221,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1457:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":223,"kind":"modifierInvocation","modifierName":{"id":220,"name":"hasOwnership","nodeType":"IdentifierPath","referencedDeclaration":209,"src":"1444:12:2"},"nodeType":"ModifierInvocation","src":"1444:33:2"},{"arguments":[{"id":225,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1492:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":227,"kind":"modifierInvocation","modifierName":{"id":224,"name":"getApproval","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"1480:11:2"},"nodeType":"ModifierInvocation","src":"1480:32:2"}],"name":"listItem","nameLocation":"1341:8:2","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"nftAddress","nameLocation":"1361:10:2","nodeType":"VariableDeclaration","scope":230,"src":"1353:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"1353:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"tokenId","nameLocation":"1383:7:2","nodeType":"VariableDeclaration","scope":230,"src":"1375:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"price","nameLocation":"1402:5:2","nodeType":"VariableDeclaration","scope":230,"src":"1394:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1394:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1349:61:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"1514:0:2"},"scope":231,"src":"1332:343:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":232,"src":"118:1559:2","usedErrors":[132,134,136]}],"src":"33:1645:2"},"id":2}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NftMarketplace.sol":{"NftMarketplace":{"abi":[{"inputs":[],"name":"NftMarketplace__","type":"error"},{"inputs":[],"name":"NftMarketplace__NotApproved","type":"error"},{"inputs":[],"name":"NftMarketplace__NotValidPrice","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"listItem","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610409806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806389bfd38f14610030575b600080fd5b61004a600480360381019061004591906102e7565b61004c565b005b8060008111610087576040517f3a8c0bfd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838360008290503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016100de9190610349565b60206040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012e91906102ba565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f09fb92a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016101d29190610349565b60206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906102ba565b73ffffffffffffffffffffffffffffffffffffffff161461026f576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b60008135905061028a816103a5565b92915050565b60008151905061029f816103a5565b92915050565b6000813590506102b4816103bc565b92915050565b6000602082840312156102d0576102cf6103a0565b5b60006102de84828501610290565b91505092915050565b600080600060608486031215610300576102ff6103a0565b5b600061030e8682870161027b565b935050602061031f868287016102a5565b9250506040610330868287016102a5565b9150509250925092565b61034381610396565b82525050565b600060208201905061035e600083018461033a565b92915050565b600061036f82610376565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6103ae81610364565b81146103b957600080fd5b50565b6103c581610396565b81146103d057600080fd5b5056fea26469706673582212206075b17c92c20ba3c8c2b3acf663871127b730c90983541f308057bc0348945864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A8C0BFD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x0 DUP3 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FB92A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP3 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8189633E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29F DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B4 DUP2 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP5 DUP3 DUP6 ADD PUSH2 0x290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FF PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP7 DUP3 DUP8 ADD PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31F DUP7 DUP3 DUP8 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x330 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP3 PUSH2 0x376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x364 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x75 0xB1 PUSH29 0x92C20BA3C8C2B3ACF663871127B730C90983541F308057BC0348945864 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"118:1559:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@listItem_230":{"entryPoint":76,"id":230,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":743,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":826,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":841,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":868,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":886,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":918,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":928,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":933,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":956,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2677:3","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:3","statements":[{"nodeType":"YulAssignment","src":"69:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:3"},"nodeType":"YulFunctionCall","src":"78:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:3"},"nodeType":"YulFunctionCall","src":"107:33:3"},"nodeType":"YulExpressionStatement","src":"107:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:3","type":""}],"src":"7:139:3"},{"body":{"nodeType":"YulBlock","src":"215:80:3","statements":[{"nodeType":"YulAssignment","src":"225:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"240:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234:5:3"},"nodeType":"YulFunctionCall","src":"234:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"283:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"256:26:3"},"nodeType":"YulFunctionCall","src":"256:33:3"},"nodeType":"YulExpressionStatement","src":"256:33:3"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"193:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"201:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"209:5:3","type":""}],"src":"152:143:3"},{"body":{"nodeType":"YulBlock","src":"353:87:3","statements":[{"nodeType":"YulAssignment","src":"363:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"372:12:3"},"nodeType":"YulFunctionCall","src":"372:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"363:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:3"},"nodeType":"YulFunctionCall","src":"401:33:3"},"nodeType":"YulExpressionStatement","src":"401:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"331:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"339:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:3","type":""}],"src":"301:139:3"},{"body":{"nodeType":"YulBlock","src":"523:274:3","statements":[{"body":{"nodeType":"YulBlock","src":"569:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"571:77:3"},"nodeType":"YulFunctionCall","src":"571:79:3"},"nodeType":"YulExpressionStatement","src":"571:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"544:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"540:3:3"},"nodeType":"YulFunctionCall","src":"540:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"565:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"536:3:3"},"nodeType":"YulFunctionCall","src":"536:32:3"},"nodeType":"YulIf","src":"533:119:3"},{"nodeType":"YulBlock","src":"662:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"677:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"691:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"681:6:3","type":""}]},{"nodeType":"YulAssignment","src":"706:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"763:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:3"},"nodeType":"YulFunctionCall","src":"748:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"772:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"716:31:3"},"nodeType":"YulFunctionCall","src":"716:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:3"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"493:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"504:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"516:6:3","type":""}],"src":"446:351:3"},{"body":{"nodeType":"YulBlock","src":"903:519:3","statements":[{"body":{"nodeType":"YulBlock","src":"949:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"951:77:3"},"nodeType":"YulFunctionCall","src":"951:79:3"},"nodeType":"YulExpressionStatement","src":"951:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"924:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"920:3:3"},"nodeType":"YulFunctionCall","src":"920:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"916:3:3"},"nodeType":"YulFunctionCall","src":"916:32:3"},"nodeType":"YulIf","src":"913:119:3"},{"nodeType":"YulBlock","src":"1042:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1057:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1071:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1061:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1086:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:3"},"nodeType":"YulFunctionCall","src":"1117:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1141:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1096:20:3"},"nodeType":"YulFunctionCall","src":"1096:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1086:6:3"}]}]},{"nodeType":"YulBlock","src":"1169:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1198:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1188:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1214:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1249:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1260:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1245:3:3"},"nodeType":"YulFunctionCall","src":"1245:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1269:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1224:20:3"},"nodeType":"YulFunctionCall","src":"1224:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1214:6:3"}]}]},{"nodeType":"YulBlock","src":"1297:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1312:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1326:2:3","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1316:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1342:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1377:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1388:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1373:3:3"},"nodeType":"YulFunctionCall","src":"1373:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1397:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1352:20:3"},"nodeType":"YulFunctionCall","src":"1352:53:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1342:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"857:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"868:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"880:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"888:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"896:6:3","type":""}],"src":"803:619:3"},{"body":{"nodeType":"YulBlock","src":"1493:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1510:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1533:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1515:17:3"},"nodeType":"YulFunctionCall","src":"1515:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1503:6:3"},"nodeType":"YulFunctionCall","src":"1503:37:3"},"nodeType":"YulExpressionStatement","src":"1503:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1481:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1488:3:3","type":""}],"src":"1428:118:3"},{"body":{"nodeType":"YulBlock","src":"1650:124:3","statements":[{"nodeType":"YulAssignment","src":"1660:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1672:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1683:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1668:3:3"},"nodeType":"YulFunctionCall","src":"1668:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1660:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1740:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1753:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1764:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1749:3:3"},"nodeType":"YulFunctionCall","src":"1749:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1696:43:3"},"nodeType":"YulFunctionCall","src":"1696:71:3"},"nodeType":"YulExpressionStatement","src":"1696:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1622:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1634:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1645:4:3","type":""}],"src":"1552:222:3"},{"body":{"nodeType":"YulBlock","src":"1820:35:3","statements":[{"nodeType":"YulAssignment","src":"1830:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1840:5:3"},"nodeType":"YulFunctionCall","src":"1840:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1830:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1813:6:3","type":""}],"src":"1780:75:3"},{"body":{"nodeType":"YulBlock","src":"1906:51:3","statements":[{"nodeType":"YulAssignment","src":"1916:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1945:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1927:17:3"},"nodeType":"YulFunctionCall","src":"1927:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1916:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1888:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1898:7:3","type":""}],"src":"1861:96:3"},{"body":{"nodeType":"YulBlock","src":"2008:81:3","statements":[{"nodeType":"YulAssignment","src":"2018:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2033:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"2040:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2029:3:3"},"nodeType":"YulFunctionCall","src":"2029:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2018:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1990:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2000:7:3","type":""}],"src":"1963:126:3"},{"body":{"nodeType":"YulBlock","src":"2140:32:3","statements":[{"nodeType":"YulAssignment","src":"2150:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"2161:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2150:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2122:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2132:7:3","type":""}],"src":"2095:77:3"},{"body":{"nodeType":"YulBlock","src":"2267:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2284:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2287:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2277:6:3"},"nodeType":"YulFunctionCall","src":"2277:12:3"},"nodeType":"YulExpressionStatement","src":"2277:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2178:117:3"},{"body":{"nodeType":"YulBlock","src":"2390:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2407:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2400:6:3"},"nodeType":"YulFunctionCall","src":"2400:12:3"},"nodeType":"YulExpressionStatement","src":"2400:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2301:117:3"},{"body":{"nodeType":"YulBlock","src":"2467:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"2524:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2533:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2536:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2526:6:3"},"nodeType":"YulFunctionCall","src":"2526:12:3"},"nodeType":"YulExpressionStatement","src":"2526:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2490:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2515:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2497:17:3"},"nodeType":"YulFunctionCall","src":"2497:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2487:2:3"},"nodeType":"YulFunctionCall","src":"2487:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2480:6:3"},"nodeType":"YulFunctionCall","src":"2480:43:3"},"nodeType":"YulIf","src":"2477:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2460:5:3","type":""}],"src":"2424:122:3"},{"body":{"nodeType":"YulBlock","src":"2595:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"2652:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2664:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2654:6:3"},"nodeType":"YulFunctionCall","src":"2654:12:3"},"nodeType":"YulExpressionStatement","src":"2654:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2618:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2643:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2625:17:3"},"nodeType":"YulFunctionCall","src":"2625:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2615:2:3"},"nodeType":"YulFunctionCall","src":"2615:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2608:6:3"},"nodeType":"YulFunctionCall","src":"2608:43:3"},"nodeType":"YulIf","src":"2605:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:3","type":""}],"src":"2552:122:3"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806389bfd38f14610030575b600080fd5b61004a600480360381019061004591906102e7565b61004c565b005b8060008111610087576040517f3a8c0bfd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838360008290503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016100de9190610349565b60206040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012e91906102ba565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f09fb92a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660008290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc846040518263ffffffff1660e01b81526004016101d29190610349565b60206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906102ba565b73ffffffffffffffffffffffffffffffffffffffff161461026f576040517f8189633e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b60008135905061028a816103a5565b92915050565b60008151905061029f816103a5565b92915050565b6000813590506102b4816103bc565b92915050565b6000602082840312156102d0576102cf6103a0565b5b60006102de84828501610290565b91505092915050565b600080600060608486031215610300576102ff6103a0565b5b600061030e8682870161027b565b935050602061031f868287016102a5565b9250506040610330868287016102a5565b9150509250925092565b61034381610396565b82525050565b600060208201905061035e600083018461033a565b92915050565b600061036f82610376565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6103ae81610364565b81146103b957600080fd5b50565b6103c581610396565b81146103d057600080fd5b5056fea26469706673582212206075b17c92c20ba3c8c2b3acf663871127b730c90983541f308057bc0348945864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT PUSH2 0x87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A8C0BFD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x0 DUP3 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FB92A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP3 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8189633E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29F DUP2 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B4 DUP2 PUSH2 0x3BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0 JUMPI PUSH2 0x2CF PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP5 DUP3 DUP6 ADD PUSH2 0x290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x300 JUMPI PUSH2 0x2FF PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP7 DUP3 DUP8 ADD PUSH2 0x27B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31F DUP7 DUP3 DUP8 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x330 DUP7 DUP3 DUP8 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F DUP3 PUSH2 0x376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x364 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C5 DUP2 PUSH2 0x396 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x75 0xB1 PUSH29 0x92C20BA3C8C2B3ACF663871127B730C90983541F308057BC0348945864 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"118:1559:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1435:5;500:1;491:5;:10;487:64;;515:31;;;;;;;;;;;;;;487:64;1457:10:::1;1469:7;1142:11;1164:10;1142:33;;1207:10;1183:34;;:3;:11;;;1195:7;1183:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;1179:75;;1231:18;;;;;;;;;;;;;;1179:75;1492:10:::2;1504:7;788:11;810:10;788:33;;865:4;829:41;;:3;:15;;;845:7;829:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;825:93;;884:29;;;;;;;;;;;;;;825:93;784:142;1257:1;;1138:124:::1;554:1;;1332:343:::0;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:139::-;347:5;385:6;372:20;363:29;;401:33;428:5;401:33;:::i;:::-;301:139;;;;:::o;446:351::-;516:6;565:2;553:9;544:7;540:23;536:32;533:119;;;571:79;;:::i;:::-;533:119;691:1;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;662:128;446:351;;;;:::o;803:619::-;880:6;888;896;945:2;933:9;924:7;920:23;916:32;913:119;;;951:79;;:::i;:::-;913:119;1071:1;1096:53;1141:7;1132:6;1121:9;1117:22;1096:53;:::i;:::-;1086:63;;1042:117;1198:2;1224:53;1269:7;1260:6;1249:9;1245:22;1224:53;:::i;:::-;1214:63;;1169:118;1326:2;1352:53;1397:7;1388:6;1377:9;1373:22;1352:53;:::i;:::-;1342:63;;1297:118;803:619;;;;;:::o;1428:118::-;1515:24;1533:5;1515:24;:::i;:::-;1510:3;1503:37;1428:118;;:::o;1552:222::-;1645:4;1683:2;1672:9;1668:18;1660:26;;1696:71;1764:1;1753:9;1749:17;1740:6;1696:71;:::i;:::-;1552:222;;;;:::o;1861:96::-;1898:7;1927:24;1945:5;1927:24;:::i;:::-;1916:35;;1861:96;;;:::o;1963:126::-;2000:7;2040:42;2033:5;2029:54;2018:65;;1963:126;;;:::o;2095:77::-;2132:7;2161:5;2150:16;;2095:77;;;:::o;2301:117::-;2410:1;2407;2400:12;2424:122;2497:24;2515:5;2497:24;:::i;:::-;2490:5;2487:35;2477:63;;2536:1;2533;2526:12;2477:63;2424:122;:::o;2552:::-;2625:24;2643:5;2625:24;:::i;:::-;2618:5;2615:35;2605:63;;2664:1;2661;2654:12;2605:63;2552:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"206600","executionCost":"251","totalCost":"206851"},"external":{"listItem(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"listItem(address,uint256,uint256)":"89bfd38f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NftMarketplace__\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__NotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftMarketplace__NotValidPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketplace.sol\":\"NftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NftMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract NftMarketplace {\\n\\t/***********************\\n\\t * Errors\\n\\t **********************/\\n\\terror NftMarketplace__NotValidPrice();\\n\\terror NftMarketplace__NotApproved();\\n\\terror NftMarketplace__();\\n\\n\\t/************************\\n\\t * Modifiers\\n\\t ***********************/\\n\\t/**\\n\\t *  check if price if valid\\n\\t * @param price nft price\\n\\t */\\n\\tmodifier validPrice(uint256 price) {\\n\\t\\tif (price <= 0) {\\n\\t\\t\\trevert NftMarketplace__NotValidPrice();\\n\\t\\t}\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * check if the marketplace (this contract) is allowed to list the nft\\n\\t * @param nftAddress nft address\\n\\t * @param tokenId token id of the specific nft\\n\\t */\\n\\tmodifier getApproval(address nftAddress, uint256 tokenId) {\\n\\t\\tIERC721 nft = IERC721(nftAddress);\\n\\t\\tif (nft.getApproved(tokenId) != address(this)) {\\n\\t\\t\\trevert NftMarketplace__NotApproved();\\n\\t\\t}\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * check if the sender has the ownership to list the nft\\n\\t * @param nftAddress nft address\\n\\t * @param tokenId token id of the specific nft\\n\\t */\\n\\tmodifier hasOwnership(address nftAddress, uint256 tokenId) {\\n\\t\\tIERC721 nft = IERC721(nftAddress);\\n\\t\\tif (nft.ownerOf(tokenId) != msg.sender) {\\n\\t\\t\\trevert NftMarketplace__();\\n\\t\\t}\\n\\t\\t_;\\n\\t}\\n\\n\\t/***********************\\n\\t ** Functions\\n\\t **********************/\\n\\tfunction listItem(\\n\\t\\taddress nftAddress,\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price\\n\\t)\\n\\t\\texternal\\n\\t\\tvalidPrice(price)\\n\\t\\thasOwnership(nftAddress, tokenId)\\n\\t\\tgetApproval(nftAddress, tokenId)\\n\\t{\\n\\t\\t/* First check for the price if greater than 0 */\\n\\t\\t/* then check if this contract is eligible to list the nft */\\n\\t\\t/* check if the sender is the owner */\\n\\t}\\n}\\n\",\"keccak256\":\"0x529fc6ce2948110e69c3710b670a3b04b30f0114c21a2cf80482d0c30297ea5b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}